[
  {
    "objectID": "background.html",
    "href": "background.html",
    "title": "Background",
    "section": "",
    "text": "Background\nGiven the number of simulation tools designed for single-cell RNA-seq data, it is critical to have a benchmark system that compares their relative performance under same set of data and same set of criteria\nSimBench together with this website is developed for the exact purpose.\nWe invite all interested researchers to run their methods on the set of data we have curated, upload their result to this website and participate in this public leaderboard of scRNA-seq simulation tools"
  },
  {
    "objectID": "comparison.html",
    "href": "comparison.html",
    "title": "Comparison",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data and Instructions",
    "section": "",
    "text": "Data and instructions\n- Download the set of curated data at link. Details about the data can be found in the package and can also be browsed under the shiny tab “More”.\n- Run your own method.\n- Evaluate the simulated data against the real data across the set of criteria we have curated at link.\n- Upload the result to the panel Submit your data."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Living Benchmark",
    "section": "",
    "text": "Warning: package 'leaflet' was built under R version 4.2.2"
  },
  {
    "objectID": "interactive.html",
    "href": "interactive.html",
    "title": "Quarto (Interactive Example)",
    "section": "",
    "text": "In this example, we will try to define a Quarto document to showcase how we can use shiny.i18n in an interactive manner. To learn more about Quarto and how it integrates with R/Shiny, check out the official documentation."
  },
  {
    "objectID": "interactive.html#introduction",
    "href": "interactive.html#introduction",
    "title": "Quarto (Interactive Example)",
    "section": "",
    "text": "In this example, we will try to define a Quarto document to showcase how we can use shiny.i18n in an interactive manner. To learn more about Quarto and how it integrates with R/Shiny, check out the official documentation."
  },
  {
    "objectID": "interactive.html#an-illustration",
    "href": "interactive.html#an-illustration",
    "title": "Quarto (Interactive Example)",
    "section": "An Illustration",
    "text": "An Illustration\nHere, we translate a famous quote from the one of the most famous people to have ever existed in tech, Steve Jobs…\n\n\n\nSelect language: \n\nEnglish 🇬🇧\nPolish 🇵🇱\nGerman 🇩🇪\nFrench 🇫🇷\n\n\n\n\n\n\n\n\n— Steve Jobs"
  },
  {
    "objectID": "observable.html",
    "href": "observable.html",
    "title": "ObservableJS",
    "section": "",
    "text": "data = FileAttachment(\"data/palmer-penguins.csv\").csv({ typed: true })\n\n\n\n\n\n\n\nviewof bill_length_min = Inputs.range(\n  [32, 50], \n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"], \n  { value: [\"Torgersen\", \"Biscoe\"], \n    label: \"Islands:\"\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfiltered = data.filter(function(penguin) {\n  return bill_length_min &lt; penguin.bill_length_mm &&\n         islands.includes(penguin.island);\n})\n\n\n\n\n\n\n\nPlot.rectY(filtered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"body_mass_g\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)"
  },
  {
    "objectID": "overview.html",
    "href": "overview.html",
    "title": "Overview",
    "section": "",
    "text": "Flow chart examples\n\n\n\n\n\n\n\nG\n\n  \n\nrun\n\n run   \n\nintr\n\n intr   \n\nrun–intr\n\n   \n\nkernel\n\n kernel   \n\nrun–kernel\n\n   \n\nrunbl\n\n runbl   \n\nintr–runbl\n\n   \n\nrunbl–run\n\n   \n\nzombie\n\n zombie   \n\nkernel–zombie\n\n   \n\nsleep\n\n sleep   \n\nkernel–sleep\n\n   \n\nrunmem\n\n runmem   \n\nkernel–runmem\n\n   \n\nsleep–runmem\n\n   \n\nswap\n\n swap   \n\nsleep–swap\n\n   \n\nrunswap\n\n runswap   \n\nswap–runswap\n\n   \n\nrunswap–runmem\n\n   \n\nnew\n\n new   \n\nrunswap–new\n\n   \n\nnew–runmem\n\n  \n\n\n\n\n\n\n\n\n\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C --&gt; D[Result one]\n  C --&gt; E[Result two]\n\n\n\n\n\n\n\n\n\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n\n\n\n\n\nEmbedding python chart example\n\n\n\n\n\n\n\nFigure 1: A scatterplot of bill dimensions for penguins, made with Altair.\n\n\n\nSource: penguins.ipynb"
  },
  {
    "objectID": "overview1.html",
    "href": "overview1.html",
    "title": "Overview3",
    "section": "",
    "text": "Col1\nCol2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#| label: tbl-iris\n\n#| tbl-cap: \"Iris Data\"\n\nlibrary(knitr)\n\nWarning: package 'knitr' was built under R version 4.2.2\n\nkable(head(iris))\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa"
  },
  {
    "objectID": "overview2.html",
    "href": "overview2.html",
    "title": "Overview2",
    "section": "",
    "text": "Embedding video sample"
  },
  {
    "objectID": "penguins.html",
    "href": "penguins.html",
    "title": "Palmer Penguins",
    "section": "",
    "text": "import pandas as pd\nimport altair as alt\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nData from Palmer Penguins R package\n\npenguins = pd.read_csv(\"https://pos.it/palmer-penguins-github-csv\")\n\n\npenguins.groupby(\"species\").size().reset_index(name = \"count\")\n\n\n\n\n\n\n\n\nspecies\ncount\n\n\n\n\n0\nAdelie\n152\n\n\n1\nChinstrap\n68\n\n\n2\nGentoo\n124\n\n\n\n\n\n\n\n\ncolors = [\"#FF8C00\", \"#A020F0\", \"#008B8B\"]\nsns.set_palette(colors, n_colors = 3)\n\n\npenguins[\"bill_ratio\"] = (\n   penguins[\"bill_length_mm\"] / penguins[\"bill_depth_mm\"] \n)\nsns.displot(penguins, \n            x = \"bill_ratio\", \n            hue = \"species\", \n            kind = \"kde\", fill = True, aspect = 2, height = 3)\nplt.show()\n\n\n\n\n\nsns.displot(penguins, \n            x = \"bill_depth_mm\", \n            hue = \"species\", \n            kind = \"kde\", fill = True, \n            aspect = 2, height = 3)\nplt.show()\nsns.displot(penguins, \n            x = \"bill_length_mm\", \n            hue = \"species\", \n            kind = \"kde\", fill = True, \n            aspect = 2, height = 3)\nplt.show()\n\n\n\n\n\n\n\n(a) Gentoo penguins tend to have thinner bills,\n\n\n\n\n\n\n\n(b) and Adelie penguins tend to have shorter bills.\n\n\n\n\nFigure 1: Marginal distributions of bill dimensions\n\n\n\n\nscale = alt.Scale(domain = ['Adelie', 'Chinstrap', 'Gentoo'],\n                  range = colors)\n\n\nalt.Chart(penguins).mark_circle(size=60).encode(\n    alt.X('bill_length_mm',\n        scale=alt.Scale(zero=False)\n    ),\n    alt.Y('bill_depth_mm',\n        scale=alt.Scale(zero=False)\n    ),\n    color = alt.Color('species', scale = scale),\n    tooltip=['species', 'sex', 'island']\n)\n\n\n\n\n\nFigure 2: A scatterplot of bill dimensions for penguins, made with Altair."
  },
  {
    "objectID": "publication.html",
    "href": "publication.html",
    "title": "Publication",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "usefulwebsites.html",
    "href": "usefulwebsites.html",
    "title": "useful websites",
    "section": "",
    "text": "Some related or interest websites:\n\n“Affycomp III - 20 years old”\n“Garnett”\n“Robinson Lab”\n“Rob J Hyndman”\n“Rob J Hyndman Github”\n\n\n\nTutorial for the websites:\n\n“Quarto”\n“Website with R”\n“Github with R”"
  }
]